# Example Kubernetes deployment with Envoy sidecar for TSd
apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: default
data:
  envoy.yaml: |
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 9901

    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 15000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              codec_type: auto
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["*"]
                  routes:
                  - match:
                      prefix: "/grpc/"
                    route:
                      cluster: grpc_service
                      prefix_rewrite: "/"
                  - match:
                      prefix: "/"
                    route:
                      cluster: web_service
              http_filters:
              - name: envoy.filters.http.grpc_web
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.grpc_web.v3.GrpcWeb
              - name: envoy.filters.http.cors
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      
      clusters:
      - name: grpc_service
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        http2_protocol_options: {}
        lb_policy: round_robin
        load_assignment:
          cluster_name: grpc_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 50051
      
      - name: web_service
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        lb_policy: round_robin
        load_assignment:
          cluster_name: web_service
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: 127.0.0.1
                    port_value: 3000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tsd-app
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tsd-app
  template:
    metadata:
      labels:
        app: tsd-app
    spec:
      containers:
        # Main application container
        - name: app
          image: your-app:latest
          ports:
            - containerPort: 3000
              name: http
            - containerPort: 50051
              name: grpc
          env:
            - name: NODE_ENV
              value: 'production'
            - name: KUBERNETES_SERVICE_HOST
              value: 'true'
            - name: ENVOY_HOST
              value: 'localhost'
            - name: ENVOY_PORT
              value: '15000'

        # Envoy sidecar container
        - name: envoy
          image: envoyproxy/envoy:v1.28-latest
          ports:
            - containerPort: 15000
              name: envoy-http
            - containerPort: 9901
              name: envoy-admin
          volumeMounts:
            - name: envoy-config
              mountPath: /etc/envoy
          command:
            - '/usr/local/bin/envoy'
            - '-c'
            - '/etc/envoy/envoy.yaml'

      volumes:
        - name: envoy-config
          configMap:
            name: envoy-config

---
apiVersion: v1
kind: Service
metadata:
  name: tsd-service
  namespace: default
spec:
  selector:
    app: tsd-app
  ports:
    - port: 80
      targetPort: 15000
      name: http
    - port: 9901
      targetPort: 9901
      name: admin
  type: LoadBalancer
