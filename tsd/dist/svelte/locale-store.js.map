{
  "version": 3,
  "sources": ["../../src/svelte/locale-store.ts"],
  "sourcesContent": ["import type { Locale } from '../types.js';\n\n// Simple store without Svelte 5 runes\nlet currentLocale: Locale = 'en';\nlet supportedLocales: Locale[] = ['en'];\nconst subscribers = new Set<(locale: Locale) => void>();\n\n// Initialize from window config if available\nif (typeof window !== 'undefined' && (window as any).__TSD_CONFIG__) {\n  currentLocale = detectLocaleFromUrl() || (window as any).__TSD_CONFIG__.defaultLocale;\n  supportedLocales = (window as any).__TSD_CONFIG__.supportedLocales;\n} else {\n  // Default values for SSR\n  currentLocale = 'en';\n  supportedLocales = ['en', 'es', 'fr', 'de', 'ja', 'zh'];\n}\n\nfunction detectLocaleFromUrl(): Locale | null {\n  if (typeof window === 'undefined') return null;\n\n  const pathname = window.location.pathname;\n  const match = pathname.match(/^\\/([a-z]{2})(?:\\/|$)/);\n\n  if (match && supportedLocales.includes(match[1])) {\n    return match[1];\n  }\n\n  return null;\n}\n\nfunction notifySubscribers() {\n  subscribers.forEach((fn) => fn(currentLocale));\n}\n\nexport const localeStore = {\n  get current() {\n    return currentLocale;\n  },\n\n  get supported() {\n    return supportedLocales;\n  },\n\n  subscribe(fn: (locale: Locale) => void) {\n    subscribers.add(fn);\n    fn(currentLocale); // Call immediately with current value\n\n    // Return unsubscribe function\n    return () => {\n      subscribers.delete(fn);\n    };\n  },\n};\n\nexport function setLocale(locale: Locale) {\n  if (!supportedLocales.includes(locale)) {\n    console.warn(`[TSd] Locale \"${locale}\" is not supported`);\n    return;\n  }\n\n  const previousLocale = currentLocale;\n  currentLocale = locale;\n\n  // Update URL if in browser\n  if (typeof window !== 'undefined') {\n    const url = new URL(window.location.href);\n    const pathname = url.pathname;\n\n    // Remove existing locale from path\n    const cleanPath = pathname.replace(/^\\/[a-z]{2}(?:\\/|$)/, '/');\n\n    // Add new locale\n    const newPath = `/${locale}${cleanPath}`;\n\n    // Check if we're in SvelteKit by looking for goto function\n    if (typeof window !== 'undefined' && '__sveltekit' in window) {\n      // In SvelteKit, dispatch event and let the app handle navigation\n      window.dispatchEvent(\n        new CustomEvent('tsd:locale-navigate', {\n          detail: { path: newPath, locale, previousLocale },\n        })\n      );\n    } else {\n      // Fallback for non-SvelteKit environments\n      window.history.pushState({}, '', newPath);\n    }\n\n    // Dispatch locale change event\n    window.dispatchEvent(\n      new CustomEvent('tsd:locale-changed', {\n        detail: { locale, previousLocale },\n      })\n    );\n  }\n\n  notifySubscribers();\n}\n\nexport function getLocale(): Locale {\n  return currentLocale;\n}\n\n// Auto-detect locale on initialization\nif (typeof window !== 'undefined') {\n  // Listen for popstate to handle browser back/forward\n  window.addEventListener('popstate', () => {\n    const detectedLocale = detectLocaleFromUrl();\n    if (detectedLocale && detectedLocale !== currentLocale) {\n      currentLocale = detectedLocale;\n      notifySubscribers();\n    }\n  });\n}\n"],
  "mappings": ";;AAGA,IAAI,gBAAwB;AAC5B,IAAI,mBAA6B,CAAC,IAAI;AACtC,MAAM,cAAc,oBAAI,IAA8B;AAGtD,IAAI,OAAO,WAAW,eAAgB,OAAe,gBAAgB;AACnE,kBAAgB,oBAAoB,KAAM,OAAe,eAAe;AACxE,qBAAoB,OAAe,eAAe;AACpD,OAAO;AAEL,kBAAgB;AAChB,qBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,IAAI;AACxD;AAEA,SAAS,sBAAqC;AAC5C,MAAI,OAAO,WAAW,YAAa,QAAO;AAE1C,QAAM,WAAW,OAAO,SAAS;AACjC,QAAM,QAAQ,SAAS,MAAM,uBAAuB;AAEpD,MAAI,SAAS,iBAAiB,SAAS,MAAM,CAAC,CAAC,GAAG;AAChD,WAAO,MAAM,CAAC;AAAA,EAChB;AAEA,SAAO;AACT;AAXS;AAaT,SAAS,oBAAoB;AAC3B,cAAY,QAAQ,CAAC,OAAO,GAAG,aAAa,CAAC;AAC/C;AAFS;AAIF,MAAM,cAAc;AAAA,EACzB,IAAI,UAAU;AACZ,WAAO;AAAA,EACT;AAAA,EAEA,IAAI,YAAY;AACd,WAAO;AAAA,EACT;AAAA,EAEA,UAAU,IAA8B;AACtC,gBAAY,IAAI,EAAE;AAClB,OAAG,aAAa;AAGhB,WAAO,MAAM;AACX,kBAAY,OAAO,EAAE;AAAA,IACvB;AAAA,EACF;AACF;AAEO,SAAS,UAAU,QAAgB;AACxC,MAAI,CAAC,iBAAiB,SAAS,MAAM,GAAG;AACtC,YAAQ,KAAK,iBAAiB,MAAM,oBAAoB;AACxD;AAAA,EACF;AAEA,QAAM,iBAAiB;AACvB,kBAAgB;AAGhB,MAAI,OAAO,WAAW,aAAa;AACjC,UAAM,MAAM,IAAI,IAAI,OAAO,SAAS,IAAI;AACxC,UAAM,WAAW,IAAI;AAGrB,UAAM,YAAY,SAAS,QAAQ,uBAAuB,GAAG;AAG7D,UAAM,UAAU,IAAI,MAAM,GAAG,SAAS;AAGtC,QAAI,OAAO,WAAW,eAAe,iBAAiB,QAAQ;AAE5D,aAAO;AAAA,QACL,IAAI,YAAY,uBAAuB;AAAA,UACrC,QAAQ,EAAE,MAAM,SAAS,QAAQ,eAAe;AAAA,QAClD,CAAC;AAAA,MACH;AAAA,IACF,OAAO;AAEL,aAAO,QAAQ,UAAU,CAAC,GAAG,IAAI,OAAO;AAAA,IAC1C;AAGA,WAAO;AAAA,MACL,IAAI,YAAY,sBAAsB;AAAA,QACpC,QAAQ,EAAE,QAAQ,eAAe;AAAA,MACnC,CAAC;AAAA,IACH;AAAA,EACF;AAEA,oBAAkB;AACpB;AA1CgB;AA4CT,SAAS,YAAoB;AAClC,SAAO;AACT;AAFgB;AAKhB,IAAI,OAAO,WAAW,aAAa;AAEjC,SAAO,iBAAiB,YAAY,MAAM;AACxC,UAAM,iBAAiB,oBAAoB;AAC3C,QAAI,kBAAkB,mBAAmB,eAAe;AACtD,sBAAgB;AAChB,wBAAkB;AAAA,IACpB;AAAA,EACF,CAAC;AACH;",
  "names": []
}
