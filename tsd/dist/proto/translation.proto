syntax = "proto3";

package tsd;

// Translation service for TSd
service TranslationService {
  // Request a single translation
  rpc Translate(TranslateRequest) returns (TranslateResponse);
  
  // Stream translation requests and responses
  rpc TranslateStream(stream TranslateRequest) returns (stream TranslateResponse);
  
  // Get all cached translations
  rpc GetTranslations(GetTranslationsRequest) returns (GetTranslationsResponse);
  
  // Subscribe to translation updates
  rpc SubscribeTranslations(SubscribeRequest) returns (stream TranslationUpdate);
}

message TranslateRequest {
  string text = 1;
  string native_locale = 2;
  string target_locale = 3;
  string key = 4; // Optional pre-computed key
}

message TranslateResponse {
  string key = 1;
  string text = 2;
  string native_locale = 3;
  string target_locale = 4;
  string translated_text = 5;
  int64 timestamp = 6;
}

message GetTranslationsRequest {
  string locale = 1; // Optional filter by locale
}

message GetTranslationsResponse {
  map<string, TranslationEntry> translations = 1;
}

message TranslationEntry {
  string key = 1;
  string text = 2;
  string native_locale = 3;
  map<string, string> translations = 4;
}

message SubscribeRequest {
  repeated string locales = 1; // Subscribe to specific locales
}

message TranslationUpdate {
  string key = 1;
  TranslationEntry entry = 2;
  string action = 3; // "added", "updated"
}